AWSTemplateFormatVersion: 2010-09-09

Description:

  This template provisions a VPC containing enterprise standard foundational networking components.

Parameters:

  VPCCidrBlock:
    Type: String
    Description: The primary IPv4 CIDR block for the VPC

  PublicSubnet1CidrBlock:
    Type: String
    Description: The IPv4 CIDR block assigned to public subnet 1

  PublicSubnet2CidrBlock:
    Type: String
    Description: The IPv4 CIDR block assigned to public subnet 2

  PrivateSubnet1CidrBlock:
    Type: String
    Description: The IPv4 CIDR block assigned to private subnet 1

  PrivateSubnet2CidrBlock:
    Type: String
    Description: The IPv4 CIDR block assigned to private subnet 2

  Subnet1AZ:
    Type: String
    Description: The Availability Zone of subnet 1

  Subnet2AZ:
    Type: String
    Description: The Availability Zone of subnet 2

  Env:
    Type: String
    Description: Sandbox, Dev, or Prod

Resources:

# VPC

  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default

      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP , !Ref Env, VPC ]]

  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP, !Ref Env, Internet Gateway]]

  myVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myInternetGateway

# Public Subnet 1

  myPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PublicSubnet1CidrBlock
      AvailabilityZone: !Ref Subnet1AZ
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP , !Ref Env, Public Subnet 1]]
        - Key: kubernetes.io/role/elb
          Value: 1

  myNatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - myNatEIP1
          - AllocationId
      SubnetId:
        Ref: myPublicSubnet1
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP , !Ref Env, NatGateway1]]

  myNatEIP1:
    DependsOn: myVPCGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  myPublicRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPublicSubnetRouteTable
      SubnetId: !Ref myPublicSubnet1

# Public Subnet 2

  myPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PublicSubnet2CidrBlock
      AvailabilityZone: !Ref Subnet2AZ
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP, !Ref Env, Public Subnet 2]]
        - Key: kubernetes.io/role/elb
          Value: 1

  myNatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - myNatEIP2
          - AllocationId
      SubnetId:
        Ref: myPublicSubnet2
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP, !Ref Env, NatGateway2]]

  myNatEIP2:
    DependsOn: myVPCGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  myPublicRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPublicSubnetRouteTable
      SubnetId: !Ref myPublicSubnet2

# Public Subnet Route

  myPublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP, !Ref Env, Public Routes]]

  myPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: myVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref myPublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref myInternetGateway

# Private Subnet 1

  myPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PrivateSubnet1CidrBlock
      AvailabilityZone: !Ref Subnet1AZ
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP , !Ref Env, Private Subnet 1]]
        - Key: kubernetes.io/role/internal-elb
          Value: 1

# Private Subnet 1 Routes

  myPrivateSubnetRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP, !Ref Env, Private Route Table 1]]

  myPrivateRoute1:
    Type: AWS::EC2::Route
    DependsOn: myNatGateway1
    Properties:
      RouteTableId: !Ref myPrivateSubnetRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref myNatGateway1

  myPrivateRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPrivateSubnetRouteTable1
      SubnetId: !Ref myPrivateSubnet1

# Private Subnet 2

  myPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Ref PrivateSubnet2CidrBlock
      AvailabilityZone: !Ref Subnet2AZ
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP, !Ref Env, Private Subnet 2]]
        - Key: kubernetes.io/role/internal-elb
          Value: 1

# Private Subnet 2 Routes

  myPrivateSubnetRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
      Tags:
        - Key: Name
          Value: !Join [" ", [IMLP, !Ref Env, Private RouteTable 2]]

  myPrivateRoute2:
    Type: AWS::EC2::Route
    DependsOn: myNatGateway2
    Properties:
      RouteTableId: !Ref myPrivateSubnetRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref myNatGateway2

  myPrivateRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref myPrivateSubnetRouteTable2
      SubnetId: !Ref myPrivateSubnet2

# Outputs

Outputs:

  Vpc:
    Description: Vpc
    Value: !Ref myVPC
    Export:
      Name: !Sub "IMLP-${Env}-Networking-Vpc-ID"

  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref myPublicSubnet1
    Export:
      Name: !Sub "IMLP-${Env}-Networking-PublicSubnet1-ID"

  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref myPublicSubnet2
    Export:
      Name: !Sub "IMLP-${Env}-Networking-PublicSubnet2-ID"

  PrivateSubnet1:
    Description: Private Subnet 1
    Value: !Ref myPrivateSubnet1
    Export:
      Name: !Sub "IMLP-${Env}-Networking-PrivateSubnet1-ID"

  PrivateSubnet2:
    Description: Private Subnet 2
    Value: !Ref myPrivateSubnet2
    Export:
      Name: !Sub "IMLP-${Env}-Networking-PrivateSubnet2-ID"